<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.mapper.BlogPostMapper">

    <resultMap id="BlogPostResultMap" type="com.example.backend.model.BlogPost">
        <id property="id" column="id" />
        <result property="title" column="title" />
        <result property="summary" column="summary" />
        <result property="content" column="content" />
        <result property="createdAt" column="created_at" />
    </resultMap>

    <select id="findAll" resultMap="BlogPostResultMap">
        SELECT id, title, summary, content, created_at
        FROM blog_posts
        ORDER BY created_at DESC
    </select>

    <select id="findById" parameterType="long" resultMap="BlogPostResultMap">
        SELECT id, title, summary, content, created_at
        FROM blog_posts
        WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="com.example.backend.model.BlogPost" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO blog_posts (title, summary, content, created_at)
        VALUES (#{title}, #{summary}, #{content}, #{createdAt})
    </insert>

    <update id="update" parameterType="com.example.backend.model.BlogPost">
        UPDATE blog_posts
        SET title = #{title},
            summary = #{summary},
            content = #{content},
            created_at = #{createdAt}
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="long">
        DELETE FROM blog_posts WHERE id = #{id}
    </delete>

</mapper>
